<style>
    .novel-detail {
        max-width: 900px;
        margin: auto;
        padding: 20px;
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    
    .novel-header {
        display: flex;
        gap: 20px;
        align-items: center;
    }
    
    .novel-header img {
        width: 200px;
        height: 300px;
        object-fit: cover;
        border-radius: 5px;
    }
    
    .novel-info h1 {
        font-size: 24px;
        margin-bottom: 10px;
    }
    
    .genre {
        display: inline-block;
        background: #f8d7da;
        color: #721c24;
        padding: 3px 8px;
        border-radius: 5px;
        margin: 2px;
        font-size: 14px;
    }
    
    .novel-description h2 {
        margin-top: 20px;
        font-size: 20px;
    }
    
    .novel-actions {
        margin-top: 20px;
        display: flex;
        gap: 10px;
    }
    
    .btn-read, .btn-save {
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
    
    .btn-read {
        background: #007bff;
        color: white;
    }
    
    .btn-save {
        background: #28a745;
        color: white;
    }
    
    .chapter-list ul {
        list-style-type: none;
        padding: 0;
    }
    
    .chapter-list li {
        padding: 8px;
        border-bottom: 1px solid #ddd;
    }
    
    .chapter-list a {
        text-decoration: none;
        color: #007bff;
        font-weight: bold;
    }
    
    .chapter-list a:hover {
        color: #0056b3;
    }
    
    p,h1, h2{
        color: #000;
    }
    
    .modal {
        display: none; /* Quan tr·ªçng: ·∫®n modal khi v√†o trang */
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
    }
    
    /* N·ªôi dung modal */
    .modal-content {
        background: white;
        padding: 20px;
        border-radius: 8px;
        text-align: center;
        width: 300px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
    }
    
    /* N√∫t ƒë√≥ng */
    .close {
        float: right;
        font-size: 24px;
        cursor: pointer;
    }
    
    /* N√∫t trong modal */
    .modal-buttons {
        margin-top: 10px;
    }
    
    .modal-buttons button {
        padding: 8px 15px;
        margin: 5px;
        border: none;
        cursor: pointer;
    }
    
    .modal-buttons button:first-child {
        background: #ff4d4d;
        color: white;
    }
    
    .modal-buttons button:last-child {
        background: #ccc;
    }
    </style>
    
    <main>
        <div class="novel-detail">
            <div class="novel-header">
                <img src="<%= novel.CoverImage %>" alt="<%= novel.Title %>">
                <div class="novel-info">
                    <h1><%= novel.Title %></h1>
                    <p><strong>T√°c gi·∫£:</strong> <%= novel.AuthorName || 'Kh√¥ng r√µ' %></p>
                    <p><strong>Th·ªÉ lo·∫°i:</strong> 
                        <% if (genres.length > 0) { %>
                            <% genres.forEach((genre, index) => { %>
                                <a href="/genres/<%= genre.GenreID %>"><span class="genre" ><%= genre.GenreName %></span></a>
                                <%= index < genres.length - 1 ? ', ' : '' %>
                            <% }) %>
                        <% } else { %>
                            Ch∆∞a c√≥ th·ªÉ lo·∫°i
                        <% } %>
                    </p>
                    <p><strong>Tr·∫°ng th√°i:</strong> <%= novel.Status === 'ongoing' ? 'ƒêang c·∫≠p nh·∫≠t' : 'Ho√†n th√†nh' %></p>
                    <p><strong>L∆∞·ª£t ƒë·ªçc:</strong> <%= novel.Views %></p>
                    <p><strong>C·∫≠p nh·∫≠t:</strong> <%= new Date(novel.UpdatedAt).toLocaleDateString() %></p>
                </div>
            </div>
        
            <div class="novel-description">
                <h2>M√¥ t·∫£</h2>
                <p><%= novel.Description %></p>
            </div>
        
            <div class="novel-actions">
                <a href="/user/read/<%= novel.NovelID %>/chapter/1" class="btn-read">ƒê·ªçc ngay</a>
                <button class="btn-save" onclick="saveNovel(<%= novel.NovelID %>)">L∆∞u v√†o th∆∞ vi·ªán</button>
                <button class="btn-report" onclick="openReportModal(<%= novel.NovelID %>)">B√°o c√°o</button>
            </div>
    
            <div id="reportModal" class="modal" style="display: none;">
                <div class="modal-content">
                    <span class="close" onclick="closeReportModal()">&times;</span>
                    <h2>B√°o c√°o n·ªôi dung</h2>
                    <input type="hidden" id="novelID">
                    <label for="reportReason">L√Ω do:</label>
                    <textarea id="reportReason"></textarea>
                    <div class="modal-buttons">
                        <button onclick="submitReport()">G·ª≠i b√°o c√°o</button>
                        <button onclick="closeReportModal()">H·ªßy</button> <!-- N√∫t h·ªßy -->
                    </div>
                </div>
            </div>
        
            <div class="chapter-list">
                <h2>Danh s√°ch ch∆∞∆°ng</h2>
                <ul>
                    <% if (chapters.length > 0) { %>
                        <% chapters.forEach(chapter => { %>
                            <li><a href="/user/read/<%= novel.NovelID %>/chapter/<%= chapter.ChapterNumber %>">
                                Ch∆∞∆°ng <%= chapter.ChapterNumber %>: <%= chapter.Title %>
                                <% if (isAuthor) { %>
                                    <button>
                                        <a href="/user/novels/<%= novel.NovelID %>/update/<%= chapter.ChapterNumber %>">Ch·ªânh s·ª≠a</a>
                                    </button>
                                <% } %>
                            </a></li>
                        <% }) %>
                    <% } else { %>
                        <p>Ch∆∞a c√≥ ch∆∞∆°ng n√†o.</p>
                    <% } %>
                    <li>
                        <a href="/user/novels/<%= novel.NovelID %>/add-chapter" class="add-chapter-btn">‚ûï Th√™m ch∆∞∆°ng</a>
                    </li>
                </ul>
            </div>
        </div>
    </main>
    
    <script>
        function saveNovel(novelID) {
            fetch(`/user/novels/${novelID}/save`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                credentials: 'include'  // üîπ QUAN TR·ªåNG: ƒê·∫£m b·∫£o g·ª≠i cookie phi√™n!
            }).then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("ƒê√£ l∆∞u v√†o th∆∞ vi·ªán!");
                    window.location.reload();
                } else {
                    alert("L·ªói: " + data.error);
                    if (data.error.includes("H√£y mua th√™m g√≥i")) {
                        window.location.href = "/user/profile"; // ƒêi·ªÅu h∆∞·ªõng mua g√≥i
                    }
                }
            }).catch(error => console.error("L·ªói:", error));
        }
    
    // M·ªü modal b√°o c√°o
    function openReportModal(novelID) {
        document.getElementById("novelID").value = novelID;
        document.getElementById("reportModal").style.display = "flex";
    }
    
    // ƒê√≥ng modal b√°o c√°o
    function closeReportModal() {
        document.getElementById("reportModal").style.display = "none";
    }
    
    // G·ª≠i b√°o c√°o l√™n server
    function submitReport() {
        const novelID = document.getElementById("novelID").value;
        const reason = document.getElementById("reportReason").value.trim();
    
        if (!reason) {
            alert("Vui l√≤ng nh·∫≠p l√Ω do b√°o c√°o.");
            return;
        }
    
        fetch(`/user/novels/${novelID}/report`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            credentials: "include", // G·ª≠i cookie session
            body: JSON.stringify({ reason })
        })
    
        .then(response => {
            if (!response.ok) throw new Error(`L·ªói HTTP: ${response.status}`);
            return response.json();
        })
        .then(data => {
            alert(data.message);
            closeReportModal();
        })
        .catch(error => {
            console.error("L·ªói khi g·ª≠i b√°o c√°o:", error);
            alert("Kh√¥ng th·ªÉ g·ª≠i b√°o c√°o!");
        });
    }
    
    </script>    