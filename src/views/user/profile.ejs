<link rel="stylesheet" href="/css/user/profile.css">

<main>
    <h2>H·ªì s∆° c·ªßa <%= user.Username %></h2>
<p>Email: <%= user.Email %></p>
<p>Vai tr√≤: <%= user.Role === 'admin' ? 'Qu·∫£n tr·ªã vi√™n' : 'Ng∆∞·ªùi d√πng' %></p>
<p>Tr·∫°ng th√°i: <%= user.Status === 'active' ? 'Ho·∫°t ƒë·ªông' : 'B·ªã c·∫•m' %></p>
<p>Tham gia v√†o: <%= new Date(user.CreatedAt).toLocaleDateString() %></p>

<button id="togglePasswordBtn">ƒê·ªïi M·∫≠t Kh·∫©u</button>

<form id="changePasswordForm" action="javascript:void(0);" method="POST" style="display: none;">
  <h3>ƒê·ªïi M·∫≠t Kh·∫©u</h3>
  <input type="hidden" id="userID" value="<%= user.UserID %>">
  <label for="currentPassword">M·∫≠t kh·∫©u hi·ªán t·∫°i:</label>
  <input type="password" id="currentPassword">
  <label for="newPassword">M·∫≠t kh·∫©u m·ªõi:</label>
  <input type="password" id="newPassword">
  <button type="submit">X√°c nh·∫≠n</button>
</form>

<h3>üìö Ti·ªÉu thuy·∫øt ƒë√£ s·ªü h·ªØu (<%= totalOwned %> / <%= totalCanOwn %>)
    <button id="add-novel-btn">‚ûï Th√™m</button>
</h3>

<div class="novel-list">
    <% if (ownedNovels.length > 0) { %>
        <% ownedNovels.forEach(novel => { %>
            <div class="novel-card">
                <img src="<%= novel.CoverImage %>" alt="<%= novel.Title %>">
                <h3><a href="/novels/<%= novel.NovelID %>"><%= novel.Title %></a></h3>
                <p>ƒê√£ mua v√†o: <%= new Date(novel.PurchasedAt).toLocaleDateString() %></p>
            </div>
        <% }) %>
    <% } else { %>
        <p>Ng∆∞·ªùi d√πng ch∆∞a s·ªü h·ªØu ti·ªÉu thuy·∫øt n√†o.</p>
    <% } %>
</div>

<h3>üìñ Ti·ªÉu thuy·∫øt ƒë√£ ƒëƒÉng t·∫£i (<%= uploadedNovels.length %>)
    <button id="upload-novel-btn" class="upload-btn">
        ‚ûï ƒêƒÉng Ti·ªÉu Thuy·∫øt
    </button>
</h3>

<div class="novel-list">
    <% if (uploadedNovels.length > 0) { %>
        <% uploadedNovels.forEach(novel => { %>
            <div class="novel-card">
                <img src="<%= novel.CoverImage %>" alt="<%= novel.Title %>">
                <h3><a href="/novels/<%= novel.NovelID %>"><%= novel.Title %></a></h3>
                <p>ƒêƒÉng t·∫£i v√†o: <%= new Date(novel.CreatedAt).toLocaleDateString() %></p>
                <a href="/user/novels/<%= novel.NovelID %>/add-chapter" class="add-chapter-btn">‚ûï Th√™m ch∆∞∆°ng</a>
            </div>
        <% }) %>
    <% } else { %>
        <p>B·∫°n ch∆∞a ƒëƒÉng t·∫£i ti·ªÉu thuy·∫øt n√†o.</p>
    <% } %>
</div>

<div class="bookmark-list">
    <h1>Danh s√°ch ch∆∞∆°ng ƒë√£ ƒë√°nh d·∫•u</h1>
    <ul>
        <% if (bookmarks.length > 0) { %>
        <% bookmarks.forEach(bookmark => { %>
            <li>
                <a href="/user/read/<%= bookmark.NovelID %>/chapter/<%= bookmark.ChapterNumber %>">
                    <%= bookmark.NovelTitle %> - Ch∆∞∆°ng <%= bookmark.ChapterNumber %>
                </a>
            </li>
        <% }) %>
        <% } else { %>
            <p>B·∫°n ch∆∞a ƒë√°nh d·∫•u ti·ªÉu thuy·∫øt n√†o.</p>
        <% } %>
    </ul>
</div>

<h1>L·ªãch s·ª≠ giao d·ªãch</h1>
<table>
    <thead>
        <tr>
            <th>T√™n G√≥i</th>
            <th>S·ªë Ti·ªÅn</th>
            <th>Tr·∫°ng Th√°i</th>
            <th>Ng√†y Th·ª±c Hi·ªán</th>
        </tr>
    </thead>
    <tbody id="transaction-history">
        <% transactions.forEach(transaction => { %>
            <tr>
                <td><%= transaction.PlanName %></td>
                <td><%= transaction.Amount.toLocaleString('vi-VN') %> VND</td>
                <td><%= transaction.Status === 'pending' ? 'ƒêang x·ª≠ l√Ω' : (transaction.Status === 'completed' ? 'Th√†nh c√¥ng' : 'T·ª´ ch·ªëi') %></td>
                <td><%= new Date(transaction.CreatedAt).toLocaleString('vi-VN') %></td>
            </tr>
        <% }) %>
    </tbody>
</table>


<h1>Thu nh·∫≠p:</h1>
<% if (uploadedNovels.length > 0) { %>
    <h3>Thu nh·∫≠p c·ªßa b·∫°n: <%= authorIncome.toLocaleString() %> VND</h3>
<% } %>

<div class="subscription-plans">
  <h2>Danh s√°ch g√≥i d·ªãch v·ª•</h2>
  <table class="plans-table">
    <thead>
      <tr>
        <th>T√™n g√≥i</th>
        <th>Gi√°</th>
        <th>S·ªë l∆∞·ª£ng truy·ªán t·ªëi ƒëa</th>
        <th>H√†nh ƒë·ªông</th>
      </tr>
    </thead>
    <tbody>
      <% availablePlans.forEach(plan => { %>
        <tr>
          <td><%= plan.PlanName %></td>
          <td><%= plan.Price.toLocaleString('vi-VN') %> VND</td>
          <td><%= plan.MaxNovels %></td>
          <td>
            <button class="btn-purchase" onclick="showPurchaseOptions(<%= plan.PlanID %>, '<%= plan.PlanName %>', <%= plan.Price %>)">Mua g√≥i</button>
          </td>
        </tr>
      <% }) %>
    </tbody>
  </table>
</div>

<!-- Modal ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n -->
<div id="payment-modal" class="modal">
  <div class="modal-content">
    <span class="close-modal">&times;</span>
    <h3>Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n</h3>
    <form id="payment-form" enctype="multipart/form-data">
      <input type="hidden" id="selected-plan-id" name="planId" value="">
      
      <div class="form-group">
        <label for="paymentMethod">Ph∆∞∆°ng th·ª©c thanh to√°n:</label>
        <select id="paymentMethod" name="paymentMethod" onchange="togglePaymentInfo()">
          <option value="momo">Momo</option>
          <option value="bank">Chuy·ªÉn kho·∫£n ng√¢n h√†ng</option>
        </select>
      </div>
      
      <div class="payment-details">
        <div id="payment-info-text">
          <p class="plan-name">G√≥i: <span id="plan-name-display"></span></p>
          <p class="plan-price">Gi√°: <span id="plan-price-display"></span> VND</p>
        </div>
      </div>
      
      <div class="form-buttons">
        <button type="button" onclick="confirmPaymentMethod()">X√°c nh·∫≠n</button>
        <button type="button" class="btn-cancel" onclick="closePaymentModal()">H·ªßy</button>
      </div>
    </form>
  </div>
</div>

<!-- Modal hi·ªÉn th·ªã QR code -->
<div id="qr-modal" class="modal">
  <div class="modal-content">
    <span class="close-qr">&times;</span>
    <div class="qr-header">
      <img src="/public/images/momo-logo.png" alt="Momo" class="payment-logo" id="payment-logo">
      <h3 id="qr-title">Qu√©t m√£ QR ƒë·ªÉ thanh to√°n</h3>
    </div>
    
    <div class="qr-container">
      <img id="qr-image" src="" alt="QR Code">
      <div class="qr-info">
        <p id="plan-info"></p>
        <p id="qr-transaction-id"></p>
        <p id="qr-instruction">Qu√©t m√£ QR b·∫±ng ·ª©ng d·ª•ng ƒë·ªÉ ho√†n t·∫•t thanh to√°n</p>
      </div>
    </div>
    
    <div class="qr-actions">
      <button onclick="showUploadForm()" class="btn-confirm">ƒê√£ thanh to√°n</button>
      <button onclick="closeQRModal()" class="btn-cancel">H·ªßy b·ªè</button>
    </div>
  </div>
</div>

<!-- Modal t·∫£i l√™n ·∫£nh ch·ª©ng minh thanh to√°n -->
<div id="upload-modal" class="modal">
  <div class="modal-content">
    <span class="close-upload">&times;</span>
    <h3>T·∫£i l√™n ·∫£nh ch·ª©ng minh thanh to√°n</h3>
    
    <form id="upload-form" enctype="multipart/form-data">
      <input type="hidden" id="upload-plan-id" name="planId" value="">
      <input type="hidden" id="upload-payment-method" name="paymentMethod" value="">
      <input type="hidden" id="upload-transaction-id" name="transactionId" value="">
      
      <div class="form-group">
        <label for="proofImage">·∫¢nh ch·ª©ng minh thanh to√°n:</label>
        <div class="file-upload-container">
          <input type="file" id="proofImage" name="proofImage" accept="image/*" required onchange="previewImage(this)">
          <label for="proofImage" class="file-upload-label">
            <i class="fas fa-cloud-upload-alt"></i> Ch·ªçn ·∫£nh
          </label>
        </div>
        <div id="image-preview" class="image-preview"></div>
      </div>
      
      <div class="form-buttons">
        <button type="button" onclick="submitProofImage()">X√°c nh·∫≠n</button>
        <button type="button" class="btn-cancel" onclick="closeUploadModal()">H·ªßy</button>
      </div>
    </form>
  </div>
</div>

<!-- Th√¥ng b√°o -->
<div id="alert-container"></div>
</main>


<script>

document.getElementById("togglePasswordBtn").addEventListener("click", () => {
    const form = document.getElementById("changePasswordForm");
    form.style.display = form.style.display === "none" ? "block" : "none";
});

document.getElementById("changePasswordForm").addEventListener("submit", async function (e) {
    e.preventDefault();

    const userID = document.getElementById("userID").value;
    const currentPassword = document.getElementById("currentPassword").value.trim();
    const newPassword = document.getElementById("newPassword").value.trim();

    if (!currentPassword || !newPassword) {
        alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!");
        return;
    }

    try {
        const response = await fetch(`/user/profile/${userID}/change-password`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            },
            body: JSON.stringify({ currentPassword, newPassword })
        });

        const result = await response.json();

        if (response.ok) {
            alert(result.message); // ƒê·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng
            // Optionally, reset form
            document.getElementById("changePasswordForm").reset();
        } else {
            alert(result.message); // V√≠ d·ª•: sai m·∫≠t kh·∫©u hi·ªán t·∫°i
        }

    } catch (error) {
        console.error("L·ªói khi g·ª≠i y√™u c·∫ßu:", error);
        alert("C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i!");
    }
});

//Th√™m ti·ªÉu thuy·∫øt v√†o th∆∞ vi·ªán
document.getElementById("add-novel-btn").addEventListener("click", async () => {
    try {
        const response = await fetch("/user/check-novel-limit", {
            headers: {
                "Accept": "application/json"
            }
        });

        const result = await response.json();

        if (!result.success) {
            alert("Kh√¥ng th·ªÉ ki·ªÉm tra l∆∞·ª£t s·ªü h·ªØu. Vui l√≤ng th·ª≠ l·∫°i sau.");
            return;
        }

        const remaining = result.remainingNovels;

        if (remaining > 0) {
            window.location.href = "/novels";
        } else {
            alert("B·∫°n ƒë√£ s·ª≠ d·ª•ng h·∫øt l∆∞·ª£t s·ªü h·ªØu ti·ªÉu thuy·∫øt. Vui l√≤ng mua th√™m g√≥i ƒë·ªçc.");
        }

    } catch (error) {
        console.error("L·ªói khi ki·ªÉm tra l∆∞·ª£t s·ªü h·ªØu:", error);
        alert("ƒê√£ x·∫£y ra l·ªói khi ki·ªÉm tra. Vui l√≤ng th·ª≠ l·∫°i.");
    }
});

//ƒêƒÉng t·∫£i ti·ªÉu thuy·∫øt
document.getElementById("upload-novel-btn").addEventListener("click", () => {
    window.location.href = "/user/upload";
});

let currentPlanId = null;
let currentPlanName = null;
let currentPlanPrice = null;

function showPurchaseOptions(planId, planName, planPrice) {
  currentPlanId = planId;
  currentPlanName = planName;
  currentPlanPrice = planPrice;

  document.getElementById("selected-plan-id").value = planId;
  document.getElementById("plan-name-display").textContent = planName;
  document.getElementById("plan-price-display").textContent = planPrice.toLocaleString('vi-VN');
  document.getElementById("payment-modal").style.display = "block";
}

function togglePaymentInfo() {
  const method = document.getElementById("paymentMethod").value;
  const logo = document.getElementById("payment-logo");
  const title = document.getElementById("qr-title");

  logo.src = method === "momo" ? "/images/momo-logo.png" : "/images/bank-logo.png";
  title.textContent = method === "momo" ? "Qu√©t m√£ QR ƒë·ªÉ thanh to√°n qua Momo" : "Qu√©t m√£ QR ƒë·ªÉ chuy·ªÉn kho·∫£n ng√¢n h√†ng";
}

function confirmPaymentMethod() {
  const method = document.getElementById("paymentMethod").value;
  const transactionId = `TXN${Date.now()}`; // random id

  document.getElementById("qr-modal").style.display = "block";
  document.getElementById("payment-modal").style.display = "none";

  document.getElementById("plan-info").textContent = `G√≥i: ${currentPlanName} - Gi√°: ${currentPlanPrice.toLocaleString('vi-VN')} VND`;
  document.getElementById("qr-transaction-id").textContent = `M√£ giao d·ªãch: ${transactionId}`;
  document.getElementById("qr-image").src = `/images/qr-demo.png`; // T·∫°m ·∫£nh demo, backend s·∫Ω c·∫≠p nh·∫≠t

  // Set hidden values
  document.getElementById("upload-plan-id").value = currentPlanId;
  document.getElementById("upload-payment-method").value = method;
  document.getElementById("upload-transaction-id").value = transactionId;
}

function showUploadForm() {
  document.getElementById("qr-modal").style.display = "none";
  document.getElementById("upload-modal").style.display = "block";
}

function previewImage(input) {
  const preview = document.getElementById("image-preview");
  preview.innerHTML = "";
  if (input.files && input.files[0]) {
    const reader = new FileReader();
    reader.onload = e => {
      preview.innerHTML = `<img src="${e.target.result}" class="preview-image"/>`;
    };
    reader.readAsDataURL(input.files[0]);
  }
}

async function submitProofImage() {
  const form = document.getElementById("upload-form");
  const formData = new FormData(form);

  const res = await fetch('/user/purchase', {
    method: 'POST',
    body: formData
  });

  const result = await res.json();
  alert(result.message);
  if (res.ok) {
    closeUploadModal();
    location.reload();
  }
}

function closePaymentModal() {
  document.getElementById("payment-modal").style.display = "none";
}
function closeQRModal() {
  document.getElementById("qr-modal").style.display = "none";
}
function closeUploadModal() {
  document.getElementById("upload-modal").style.display = "none";
}

</script>