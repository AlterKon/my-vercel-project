<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/css/admin/novelManage.css">
</head>
<body>
    <div class="topnav">
        <a href="/"><img src="/public/logo.png" alt="Logo"></a>
        <a href="/Admin/Statistical">Th·ªëng k√™</a>
        <a href="/Admin/Users">T√†i kho·∫£n</a>
        <a class="active" href="/Admin/Novels">Ti·ªÉu thuy·∫øt</a>
        <a href="/Admin/Genres">Th·ªÉ lo·∫°i</a>
        <a href="/Admin/Transactions">Giao d·ªãch</a>
        <a href="/Admin/Discussions">B√†i th·∫£o lu·∫≠n</a>
        <a href="/Admin/Reports">B√°o c√°o</a>
        <a href="/Admin/SubscriptionPlans">G√≥i ƒë·ªçc</a>
        <div class="user-menu">
            <% if (typeof currentUser !== 'undefined' && currentUser) { %>
                <% if (currentUser.role === 'admin') { %>
                    <a href="/Admin/Users">Qu·∫£n l√Ω</a>
                <% } %>
                <a href="/user/profile/<%= currentUser.id %>">C√° nh√¢n</a>
                <a href="/logout">ƒêƒÉng xu·∫•t</a>
            <% } else { %>
                <a href="/login">ƒêƒÉng nh·∫≠p</a>
                <a href="/register">ƒêƒÉng k√Ω</a>
            <% } %>
        </div> 
    </div>
    <div class="table-container">
        <div class="title">Danh s√°ch ti·ªÉu thuy·∫øt</div>

        <input type="text" id="searchTitle" placeholder="T√¨m theo ti√™u ƒë·ªÅ..." value="<%= title || '' %>">

        <select id="searchAuthor" name="author">
            <option value="">-- Ch·ªçn t√°c gi·∫£ --</option>
            <% authors.forEach(authorItem => { %>
                <option value="<%= authorItem.UserID %>" <%= authorItem.UserID == author ? "selected" : "" %>>
                    <%= authorItem.Username %>
                </option>
            <% }); %>
        </select>
        
        <select id="searchGenre" name="genre">
            <option value="">-- Ch·ªçn th·ªÉ lo·∫°i --</option>
            <% genres.forEach(genreItem => { %>
                <option value="<%= genreItem.GenreID %>" <%= genreItem.GenreID == genre ? "selected" : "" %>>
                    <%= genreItem.GenreName %>
                </option>
            <% }); %>
        </select>
        
        <button onclick="searchNovels()">T√¨m</button>
        <table>
            <tr>
                <th>ID</th>
                <th>T√™n</th>
                <th>Th·ªÉ lo·∫°i</th>
                <th>T√°c gi·∫£</th>
                <th>Tr·∫°ng th√°i</th>
                <th>Ch∆∞∆°ng</th>
                <th>L∆∞·ª£t ƒë·ªçc</th>
                <th>Kh√≥a</th>
                <th>H√†nh ƒë·ªông</th>
            </tr>
            <tbody id="novelTableBody">
            <% novels.forEach(novel => { %>
            <tr>
                <td><%= novel.NovelID %></td>
                <td><%= novel.Title %></td>
                <td><%= novel.Genres ? [...new Set(novel.Genres.split(",").map(g => g.trim()))].join(", ") : 'Ch∆∞a c√≥ th·ªÉ lo·∫°i' %></td>
                <td><%= novel.AuthorName %></td>
                <td><%= novel.Status %></td>
                <td><%= novel.ChapterCount %></td>
                <td><%= novel.Views %></td>
                <td>
                    <button onclick="toggleLock(<%= novel.NovelID %>, <%= novel.Locked ? 'false' : 'true' %>)">
                        <%= novel.Locked ? 'üîí M·ªü' : 'üîì Kh√≥a' %>
                    </button>
                </td>
                <td>
                    <button onclick="openEditForm(<%= novel.NovelID %>)">S·ª≠a</button>
                    <button onclick="deleteNovel(<%= novel.NovelID %>)">X√≥a</button>
                </td>
            </tr>
            <% }); %>
        </tbody>
        </table>
        
        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="/Admin/Novels?page=<%= currentPage - 1 %><%= title ? '&title=' + title : '' %><%= author ? '&author=' + author : '' %><%= genre ? '&genre=' + genre : '' %>">&laquo;</a>
            <% } %>
            
            <% 
            // Hi·ªÉn th·ªã t·ªëi ƒëa 5 trang v√† trang hi·ªán t·∫°i ·ªü gi·ªØa n·∫øu c√≥ th·ªÉ
            let startPage = Math.max(1, currentPage - 2);
            let endPage = Math.min(totalPages, startPage + 4);
            
            // ƒêi·ªÅu ch·ªânh l·∫°i n·∫øu kh√¥ng ƒë·ªß trang ·ªü cu·ªëi
            if (endPage - startPage < 4 && startPage > 1) {
                startPage = Math.max(1, endPage - 4);
            }
            
            // Hi·ªÉn th·ªã "..." n·∫øu c√≤n nhi·ªÅu trang ·ªü ƒë·∫ßu
            if (startPage > 1) { %>
                <a href="/Admin/Novels?page=1<%= title ? '&title=' + title : '' %><%= author ? '&author=' + author : '' %><%= genre ? '&genre=' + genre : '' %>">1</a>
                <% if (startPage > 2) { %>
                    <span class="pagination-ellipsis">...</span>
                <% } %>
            <% } %>
            
            <% for(let i = startPage; i <= endPage; i++) { %>
                <a href="/Admin/Novels?page=<%= i %><%= title ? '&title=' + title : '' %><%= author ? '&author=' + author : '' %><%= genre ? '&genre=' + genre : '' %>" class="<%= i === currentPage ? 'active' : '' %>"><%= i %></a>
            <% } %>
            
            <% 
            // Hi·ªÉn th·ªã "..." n·∫øu c√≤n nhi·ªÅu trang ·ªü cu·ªëi
            if (endPage < totalPages) { 
                if (endPage < totalPages - 1) { %>
                    <span class="pagination-ellipsis">...</span>
                <% } %>
                <a href="/Admin/Novels?page=<%= totalPages %><%= title ? '&title=' + title : '' %><%= author ? '&author=' + author : '' %><%= genre ? '&genre=' + genre : '' %>"><%= totalPages %></a>
            <% } %>
            
            <% if (currentPage < totalPages) { %>
                <a href="/Admin/Novels?page=<%= currentPage + 1 %><%= title ? '&title=' + title : '' %><%= author ? '&author=' + author : '' %><%= genre ? '&genre=' + genre : '' %>">&raquo;</a>
            <% } %>
        </div>

        <div id="editForm" class="overlay" style="display: none;">
            <div class="popup">
                <form id="updateNovelForm">
                    <input type="hidden" id="editNovelID">
                    <label>T√™n:</label> <input type="text" id="editTitle"><br>
                    <label>M√¥ t·∫£:</label> <textarea id="editDescription"></textarea><br>
                    <label>·∫¢nh b√¨a:</label> <input type="text" id="editCoverImage"><br>
                    <label>T√°c gi·∫£:</label>
                    <select id="editAuthorID">
                        <% authors.forEach(author => { %>
                            <option value="<%= author.UserID %>"><%= author.Username %></option>
                        <% }); %>
                    </select><br>   
                    <label>Th·ªÉ lo·∫°i:</label>
                    <div id="editGenresContainer">
                        <% genres.forEach(genre => { %>
                            <label>
                                <input type="checkbox" class="editGenreCheckbox" value="<%= genre.GenreID %>">
                                <%= genre.GenreName %>
                            </label>
                        <% }); %>
                    </div>
                    <label>Tr·∫°ng th√°i:</label>
                    <select id="editStatus">
                        <option value="ongoing">ƒêang ti·∫øn h√†nh</option>
                        <option value="completed">Ho√†n th√†nh</option>
                    </select><br>
                    <button type="submit">L∆∞u</button>      
                    <button type="button" onclick="closeEditForm()">H·ªßy</button>
                </form>
            </div>
        </div>
    </div>
    <script>
        var novels = <%- JSON.stringify(novels) %>;
        var genres = <%- JSON.stringify(genres) %>;

function openEditForm(novelID) {
    const novel = novels.find(n => n.NovelID == novelID);
    if (!novel) {
        alert("Kh√¥ng t√¨m th·∫•y ti·ªÉu thuy·∫øt!");
        return;
    }

    document.getElementById("editNovelID").value = novel.NovelID;
    document.getElementById("editTitle").value = novel.Title;
    document.getElementById("editDescription").value = novel.Description;
    document.getElementById("editCoverImage").value = novel.CoverImage;
    document.getElementById("editAuthorID").value = novel.AuthorID;
    document.getElementById("editStatus").value = novel.Status;

    // ƒê√°nh d·∫•u th·ªÉ lo·∫°i ƒë√£ ch·ªçn
    let selectedGenres = Array.isArray(novel.GenreIDs) ? novel.GenreIDs.map(id => id.toString()) : [];
    document.querySelectorAll(".editGenreCheckbox").forEach(checkbox => {
        checkbox.checked = selectedGenres.includes(checkbox.value);
    });


    document.getElementById("editForm").style.display = "flex";
}

// ƒê√≥ng form ch·ªânh s·ª≠a
function closeEditForm() {
    document.getElementById("editForm").style.display = "none";
}

// G·ª≠i request c·∫≠p nh·∫≠t
document.getElementById("updateNovelForm").addEventListener("submit", function (e) {
    e.preventDefault();
    const novelID = document.getElementById("editNovelID").value;
    const title = document.getElementById("editTitle").value;
    const description = document.getElementById("editDescription").value;
    const coverImage = document.getElementById("editCoverImage").value;
    const authorID = document.getElementById("editAuthorID").value;
    const status = document.getElementById("editStatus").value;

    // L·∫•y danh s√°ch c√°c th·ªÉ lo·∫°i ƒë√£ ch·ªçn
    const genres = Array.from(document.querySelectorAll(".editGenreCheckbox:checked"))
                    .map(checkbox => parseInt(checkbox.value, 10))
                    .filter(id => !isNaN(id)); // Chuy·ªÉn th√†nh s·ªë nguy√™n, lo·∫°i b·ªè gi√° tr·ªã kh√¥ng h·ª£p l·ªá

    // Ki·ªÉm tra d·ªØ li·ªáu tr∆∞·ªõc khi g·ª≠i ƒëi
    console.log("D·ªØ li·ªáu g·ª≠i l√™n:", { novelID, title, description, coverImage, authorID, status, genres });

    fetch("/Admin/Novels/update", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ novelID, title, description, coverImage, authorID, status, genres })
    })
    .then(response => response.json())
    .then(data => {
        alert(data.message);
        if (data.success) location.reload();
    })
    .catch(error => {
        console.error("L·ªói khi c·∫≠p nh·∫≠t ti·ªÉu thuy·∫øt:", error);
        alert("L·ªói khi c·∫≠p nh·∫≠t ti·ªÉu thuy·∫øt!");
    });
});


// Kh√≥a/M·ªü kh√≥a ti·ªÉu thuy·∫øt
function toggleLock(novelID, locked) {
    fetch("/Admin/Novels/lock", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ novelID, locked })
    })
    .then(response => response.json())
    .then(data => {
        alert(data.message);
        if (data.success) location.reload();
    })
    .catch(error => alert("L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i kh√≥a!"));
}

function searchNovels() {
    const title = document.getElementById("searchTitle").value;
    const authorID = document.getElementById("searchAuthor").value;
    const genreID = document.getElementById("searchGenre").value;

    fetch(`/Admin/search-novels?title=${encodeURIComponent(title)}&author=${encodeURIComponent(authorID)}&genre=${encodeURIComponent(genreID)}`, {
        headers: { "Accept": "application/json" }
    })
    .then(response => response.json())
    .then(data => {
        const tableBody = document.getElementById("novelTableBody");
        tableBody.innerHTML = "";

        if (Array.isArray(data.novels)) {
            data.novels.forEach(novel => {
                const row = `
                <tr>
                    <td>${novel.NovelID}</td>
                    <td>${novel.Title}</td>
                    <td>${novel.Genres || "Kh√¥ng c√≥"}</td>
                    <td>${novel.AuthorName}</td>
                    <td>${novel.Status}</td>
                    <td>${novel.Views}</td>
                    <td>${novel.ChapterCount}</td>
                    <td>
                        <button onclick="toggleLock(${novel.NovelID}, ${novel.Locked ? 'false' : 'true'})">
                            ${novel.Locked ? 'üîí Kh√≥a' : 'üîì M·ªü'}
                        </button>
                    </td>
                    <td>
                        <button onclick="openEditForm(${novel.NovelID})">S·ª≠a</button>
                    </td>
                </tr>
            `;
            tableBody.innerHTML += row;
            });
        } else {
            console.error("D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá:", data);
        }
    })
    .catch(error => console.error("L·ªói t√¨m ki·∫øm:", error));
}

function deleteNovel(NovelID) {
            if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a ti·ªÉu thuy·∫øt n√†y?")) return;

            fetch('/admin/delete-novel', {
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ NovelID })
            })
            .then(response => response.json())
            .then(data => {
                alert(data.message);
                if (data.success) {
                    location.reload();
                }
            })
            .catch(error => {
                console.error("L·ªói:", error);
                alert("C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i!");
            });
        }
    </script>
</body>
</html>